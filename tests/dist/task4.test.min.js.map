{"version":3,"sources":["task4.test.js"],"names":["deleteUser","require","test","statusCode","regeneratorRuntime","async","_context","prev","next","awrap","sent","expect","toBe","console","error","message","toBeUndefined","stop"],"mappings":"aAAA,IAAMA,WAAaC,QAAQ,kBAA3BC,KAAMF,kDAAN,WAAA,IAAAG,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAGe,EAHfF,EAAAE,KAAA,EAAAJ,mBAAAK,MAEKT,WACU,IAHf,KAAA,EAEwD,iBAAnDG,EAFLG,EAAAI,MAEwDC,OAAAR,GAAAS,KAAA,MAAAC,QAAAC,MAAAX,EAAAY,SAAAJ,OAAAR,EAAAW,OAAAE,iBAFxD,KAAA,EAAA,IAAA,MAAA,OAAAV,EAAAW","file":"task4.test.min.js","sourcesContent":["const deleteUser = require('../tasks/task3'); \r\n\r\ntest('Correctly makes DELETE request and removes user', async () => {\r\nconst userId = 1; \r\nconst statusCode = await deleteUser(userId);\r\n  \r\n  \r\nif (typeof statusCode === 'number') {\r\nexpect(statusCode).toBe(200);\r\n} else {\r\n    \r\nconsole.error(statusCode.message); \r\nexpect(statusCode.error).toBeUndefined(); \r\n}\r\n});\r\n"]}